<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFrameworks>net462;netstandard2.0;netstandard2.1</TargetFrameworks>
    <Version>3.1.4</Version>
    <LangVersion>10.0</LangVersion>
    <AssemblyName>Senparc.CO2NET</AssemblyName>
    <RootNamespace>Senparc.CO2NET</RootNamespace>
    <GeneratePackageOnBuild Condition=" '$(Configuration)' == 'Release' ">true</GeneratePackageOnBuild>
    <Description>
			Senparc.CO2NET Public Base Library
			Senparc.CO2NET Open Source Project:
			https://github.com/Senparc/Senparc.CO2NET
		</Description>
    <Copyright>Senparc Copyright Â© 2004~2024</Copyright>
    <PackageTags>.NET Core,.NET Framework,Public,Base Library,CO2NET,Senparc</PackageTags>
    <Authors>Senparc</Authors>
    <Owners>Senparc</Owners>
    <PackageLicenseExpression>Apache-2.0</PackageLicenseExpression>
    <ProjectUrl>https://github.com/Senparc/Senparc.CO2NET</ProjectUrl>
    <Title>Senparc.CO2NET.dll</Title>
    <Summary>Senparc.CO2NET Public Base Library</Summary>
    <PackageProjectUrl>https://github.com/Senparc/Senparc.CO2NET</PackageProjectUrl>
    <PackageIcon>icon.jpg</PackageIcon>
    <PackageReleaseNotes>
			v0.1.0 Build basic code, separate public code from Senparc.Weixin
			v0.1.1 Optimize code, unit tests nearly 100% coverage
			v0.1.2 Add IDomainExtensionCacheStrategy.RegisterCacheStrategyDomain() method
			v0.1.3 Add EntityUtility.FillSystemType() method to handle Int32[] and Int64[]
			v0.1.4 Add SenparcSetting global configuration property
			v0.1.5 RegisterServiceExtension.AddSenparcGlobalServices() method can automatically get SenparcSetting global settings
			v0.1.6 Fix XXE vulnerability, inherit from XmlDocument object, automatically set XmlResolver to null
			v0.1.6.1 Add Register.UseSenparcGlobal() method
			v0.1.7 Extend ReflectionHelper.GetStaticMember() method
			v0.1.8 In .net core, the env parameter in RegisterService.Start() method can be null to complete registration in console and other environments
			v0.1.9
			1. RegisterService cancels public constructor, unified use of RegisterService.Start() for initialization
			2. Refactor Register.UseSenparcGlobal() method to undertake extended cache scanning function
			3. Add UnregisteredDomainCacheStrategyException exception type
			4. Unified requirement to provide SenparcSetting parameter in constructor for both .net framework and .net core versions
			v0.1.10 Adjust SenparcSetting parameter, include distributed cache connection information into SenparcSetting
			v0.1.11 Provide SenparcSetting.BuildFromWebConfig() method
			v0.2.0 Cache strategy provides timeout setting interface
			v0.2.1 "Current extended cache strategy is not registered" exception information provides more detailed cache type information
			v0.2.2 RequestExtension adds support for NETSTANDARD2_0
			v0.2.3 Optimize the output result of RequestExtension.AbsoluteUri() method
			v0.2.4
			1. Add CacheException cache exception type
			2. Add prompt for IMemoryCache not set
			3. Optimize UnregisteredDomainCacheStrategyException, use CacheException as base class
			v0.2.5 Optimize SenparcID, all methods support .net standard 2.0
			v0.2.6 Add DateTimeHelper.GetUnixDateTime() method, mark GetWeixinDateTime() method as obsolete
			v0.2.7 Add ServerUtility
			v0.2.8 Add SenparcDI.GetIServiceProvider() method to support other dependency injection frameworks
			v0.2.9
			1. Optimize Config.RootDictionaryPath method, can automatically get default value
			2. Add SerializerHelper.GetObject(this string jsonString, Type type) method
			v0.2.10 ObjectExtensions.ToJson() method provides indented method, supports indented format
			v0.2.11 Fix invalid simulated form Post parameters under .NET Core
			v0.2.14 Optimize ToJson() method
			v0.2.15 Add headerAddition parameter to Post method
			v0.2.17 Enable SystemTime.Now, convenient for unit testing or emergency changes to the system current time
			v0.2.18 Support Senparc.CO2NET.APM
			v0.3.0 Upgrade SenparcTrace, use queue
			v0.3.1 Update RequestUtility.GetQueryString() method
			v0.4.0 Use .NETStandard2.0 to unify support for .NET Core, abandon separate adaptation for .NET Core 1.x
			v0.4.1 Add encoding type selection for UrlEncode() and UrlDecode() methods under .net framework environment
			v0.4.2 Optimize path recognition methods in ServerUtility class under docker or linux environment
			v0.4.3 Use DateTimeOffset instead of DateTime
			v0.4.4 Provide SenparcTrace.RecordAPMLog parameter RequestUtility.Post.cs
			v0.5.0 Provide comprehensive support for .NET Core Console
			v0.5.1 Add jsonSerializerSettings parameter to ToJson() method
			v0.5.1.1 Add Sex.Unset enumeration value
			v0.5.2 Add SenparcDI.GetRequiredService() method, provide independent ServiceProvider instance within thread
			v0.6.0 Provide asynchronous cache interface
			v0.6.1 Improve SystemTime, add NowTicks property
			v0.7.0 Optimize HttpClient, refactor RequestUtility (including Post and Get), introduce HttpClientFactory mechanism
			v0.7.1
			1. Add NowDiff property
			2. Add DayOfWeekString, DILifecycleType configuration and enumeration
			v0.7.1
			1. Add NowDiff property
			2. Add DayOfWeekString, DILifecycleType configuration and enumeration
			3. Fix: Post method did not specify content-type under .NET 4.5
			v0.7.2.1 Fix possible exception when cookieContainer is null in GetHttpClientHandler() method
			v0.7.3
			1. Add HttpClientFactory multi-certificate solution
			2. Use .ConfigureAwait(false) to avoid asynchronous deadlock
			v0.8
			1. Stop supporting .NET 3.5/4.0
			2. Use asynchronous methods to improve concurrency efficiency
			v0.8.3 Add GetMD5() method for Stream parameter
			v0.8.4 Cancel UrlEncode encoding for fileName parameter in CreateFileContent called by HttpUtility.HttpPost_Common_NetCore
			v0.8.5 Fix file upload ContentType setting issue under .NET Framework 4.5
			v0.8.6 Add FileHelper.FileInUse() method to determine if the file is being used
			v0.8.7 Add new feature to RequestUtility.Post() method: use file stream to simulate Form submission
			v0.8.8 Improve SenparcTrace logging efficiency, provide asynchronous method handling
			v0.8.9 Provide AutoUnlockLogFile parameter, and try to automatically unlock in case of possible log file occupation.
			v0.8.10 Provide Config.HostingEnvironment property
			v0.9.0 Add SystemTime.UtcDateTime property
			v0.9.1 Provide signed nuget package (.snuget)
			v1.0.100 Support .NET Core 3.0
			v1.0.101 RequestUtility.GetRequestMemoryStream() adds setting for .NET Core 3.0 AllowSynchronousIO
			v1.0.102
			1. Provide new app.UseSenparcGlobal() registration method
			2. Add more SystemTime helper methods
			v1.0.103 Optimize asynchronous methods
			v1.3.201 Update Senparc.CO2NET.HttpUtility.Get.Download() method, fix filename judgment regular expression
			v1.4.400 Fix Download method bug
			v1.5.2
			1. Add and enrich encryption methods in EncryptHelper (SHA1, AesGcmDecrypt, CRC32)
			2. Add GetFileHash method in FileHelper
			3. Add judgment for successful lock before releasing LocalCacheLock
			v2.0.2 Add overridden method for XmlUtility.Deserialize()
			v2.0.3 Change the implementation of HttpClient request timeout
			v2.0.4 Add rootNodeName parameter to XmlUtility Deserialize
			v2.0.5 Add WaitingFor() method
			v2.0.5.4 Add settings parameter to GetObject() method
			v2.1.1 Add more overridden methods for GetObject()
			v2.1.2
			1. Fix the issue of Chinese names in sent files being recognized as garbled by WeChat server
			2. Refactor RequestUtility, change HttpPost_Common_NetCore() to asynchronous method: HttpPost_Common_NetCoreAsync()
			3. Fix bug in FileHelper.GetFileHash()
			v2.1.3
			1. Handle special judgment for Cookie under .NET 7.0
			2. Optimize simulated Form submission
			v2.1.4 Optimize system startup parameters, allow registration of HTTP certificates using relative paths
			v2.1.5 Add EncryptHelper.GetCertString() and GetCertStringFromFile() methods
			v2.1.6 Add null judgment for target object not found in ReflectionHelper.GetStaticMember() method, no longer throw exception
			v2.1.7 Provide contentType parameter for HttpUtility.Post series methods
			v2.1.7.2 Fix "The value cannot be null or empty. (Parameter 'mediaType')" exception caused by the previous version upgrade
			v2.1.7.3 Continue to fix "The value cannot be null or empty. (Parameter 'mediaType')" exception caused by the previous version upgrade
			v2.1.8 Add pure string judgment to LocalObjectCacheStrategy.Get() method
			v2.2.0 Add RequestUtility.DeleteAsync() method
			v2.3.0 Adapt to .NET 8.0
			v2.3.1 Add app.UseSenparcGlobal extension method
			v2.4.0 Add SenparcDI.GetService&lt;T&gt;(), SenparcDI.GetRequiredService&lt;T&gt;(), SenparcDI.GetRequreidKeyedService() methods
		v2.4.1 Add refresh parameter to SenparcDI.GetServiceProvider() method
		v2.4.2 Add ReflectionHelper.HasParameterlessConstructor() method
		v2.4.3 Update DateTimeHelper.GetDateTimeOffsetFromXml() method
		[2024-08-23] v2.5.0 Create dependency injection registration for IBaseObjectCacheStrategy
		[2024-08-23] v2.5.1 Update DateTimeHelper.GetDateTimeOffsetFromXml() method #297 Thanks @zhaoyangguang
		[2024-09-11] v2.5.2 Update Cache, remove InsertToCache(), add Count(prefix)
		[2024-10-24] v3.0.0-beta1 Upgrade to English version
		[2024-10-24] v3.0.0-beta3 Add ApiClient and ApiClientHelper
		[2024-11-28] v3.0.1-beta3 Add UseLowerCaseApiName property for SenparcSetting
		[2024-12-04] v3.1.0-beta3 update Start() method, set SenparcSetting in Config when AddSenparcGlobalService() run
		[2025-01-05] v3.1.1 update Encoding.UTF-8 for SenparcTrace log store
		[2025-01-28] v3.1.2 add ValidationHelper.CheckNull
		[2025-04-24] v3.1.3 restore configuration for RegisterServices.Start(senparcSetting) parameter for .NET Framework
		[2025-09-06] v3.1.4 Update XML Serialization and Cache module
	</PackageReleaseNotes>
    <RepositoryUrl>https://github.com/Senparc/Senparc.CO2NET</RepositoryUrl>
    <Configurations>Debug;Release;Test</Configurations>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <OutputPath>..\BuildOutPut</OutputPath>
    <DefineConstants>TRACE;RELEASE</DefineConstants>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)' == 'Release|x86'">
    <OutputPath>..\BuildOutPut</OutputPath>
    <DefineConstants>$(DefineConstants);RELEASE</DefineConstants>
    <DocumentationFile>..\BuildOutPut\Senparc.CO2NET.xml</DocumentationFile>
    <Optimize>true</Optimize>
    <DebugType>pdbonly</DebugType>
    <ErrorReport>prompt</ErrorReport>
    <CodeAnalysisRuleSet>MinimumRecommendedRules.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Release|net462|AnyCPU'">
    <OutputPath>..\BuildOutPut\</OutputPath>
    <DocumentationFile>..\BuildOutPut\net462\Senparc.CO2NET.xml</DocumentationFile>
  </PropertyGroup>
  <!--<PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Release|netstandard1.6|AnyCPU'">  
        <OutputPath>..\BuildOutPut\</OutputPath>  
        <DocumentationFile>..\BuildOutPut\netstandard1.6\Senparc.CO2NET.xml</DocumentationFile>  
    </PropertyGroup>-->
  <PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Release|netstandard2.0|AnyCPU'">
    <OutputPath>..\BuildOutPut\</OutputPath>
    <DocumentationFile>..\BuildOutPut\netstandard2.0\Senparc.CO2NET.xml</DocumentationFile>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Release|netstandard2.1|AnyCPU'">
    <OutputPath>..\BuildOutPut\</OutputPath>
    <DocumentationFile>..\BuildOutPut\netstandard2.1\Senparc.CO2NET.xml</DocumentationFile>
  </PropertyGroup>
  <ItemGroup>
    <None Include=".\icon.jpg" Pack="true" Visible="false" PackagePath="" />
  </ItemGroup>
  <ItemGroup>
    <Compile Remove="Utilities\Cache\**" />
    <EmbeddedResource Remove="Utilities\Cache\**" />
    <None Remove="Utilities\Cache\**" />
  </ItemGroup>
  <ItemGroup>
    <Compile Remove="Cache\Lock\CacheLockWrapper.cs" />
    <Compile Remove="Cache\Lock\CacheLockWrapperExtension.cs" />
    <Compile Remove="Trace\SenparcTrace.v0.2.18.cs" />
  </ItemGroup>
  <ItemGroup>
    <PackageReference Include="Microsoft.Extensions.Configuration" Version="8.0.0" />
    <PackageReference Include="Newtonsoft.Json" Version="13.0.3" />
  </ItemGroup>
  <ItemGroup Condition=" '$(TargetFramework)' == 'net462' ">
    <Reference Include="System.Core" />
    <Reference Include="System.Data" />
    <Reference Include="System.Data.DataSetExtensions" />
    <Reference Include="System.Net.Http" />
    <Reference Include="System.Runtime.Serialization" />
    <Reference Include="System.Web" />
    <Reference Include="System.Web.Extensions" />
    <Reference Include="System.Xml" />
    <Reference Include="System.Xml.Linq" />
    <Reference Include="System.Configuration" />
  </ItemGroup>
  <ItemGroup Condition=" '$(TargetFramework)' != 'net462'">
    <!--<FrameworkReference Include="Microsoft.AspNetCore.App" />-->
    <PackageReference Include="Microsoft.Extensions.Options.ConfigurationExtensions" Version="8.0.0" />
    <PackageReference Include="Microsoft.Extensions.Caching.Abstractions" Version="8.0.0" />
    <PackageReference Include="Microsoft.Extensions.DependencyInjection" Version="8.0.0" />
    <PackageReference Include="Microsoft.Extensions.Http" Version="8.0.0" />
    <PackageReference Include="Microsoft.Extensions.Http.Polly" Version="8.0.0" />
    <PackageReference Include="Microsoft.Extensions.DependencyInjection.Abstractions" Version="8.0.0" />
    <PackageReference Include="Microsoft.Net.Http.Headers" Version="8.0.0" Condition=" '$(TargetFramework)' == 'net8.0'" />
    <PackageReference Include="Microsoft.Net.Http.Headers" Version="2.2.0" Condition=" '$(TargetFramework)' != 'net8.0'" />
  </ItemGroup>
  <ItemGroup>
    <Folder Include="Utilities\HttpUtility\HttpPut\" />
  </ItemGroup>
</Project>